" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
" !!! DO NOT EDIT THIS FILE !!!
" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
"
" See ":h vimrc"
" or
" "Long press menu" > "Edit .vimrc"
" or
" ":e ~/.vimrc"
" or
" ":e $HOME/.vimrc"
"
" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
" !!! DO NOT EDIT THIS FILE !!!
" !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
"
" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
" Avoid side effects when it was already reset.
if &compatible
  set nocompatible
endif

" When the +eval feature is missing, the set command above will be skipped.
" Use a trick to reset compatible only when the +eval feature is missing.
silent! while 0
  set nocompatible
silent! endwhile

" Encodeing
set enc=utf-8
set tenc=utf-8

" Timeout
set notimeout
set timeoutlen=3000
set ttimeout
set ttimeoutlen=100

if filereadable($APPEXTFILES."/vimrc.local")
  exe 'source '.$APPEXTFILES.'/vimrc.local'
endif

" defaults.vim
runtime defaults.vim
if exists('skip_defaults_vim')
  let skip_droidvim_defaults_vim=1
endif

scriptencoding utf-8
" Locale
if !exists('$LANG') && executable("getprop")
  let s:locale = system("getprop persist.sys.locale")
  let s:locale = substitute(s:locale, '[\r\n]', '', 'g')
  if s:locale != ''
    let $LANG = substitute(s:locale, '-', '_', 'g')
  else
    let s:language = system("getprop persist.sys.language")
    let s:language = substitute(s:language, '[\r\n]', '', 'g')
    let s:country = system("getprop persist.sys.country")
    let s:country = substitute(s:country, '[\r\n]', '', 'g')
    if s:language != '' && s:country != ''
      let $LANG = s:language.'_'.s:country
    endif
    unlet s:language s:country
  endif
  if $LANG != ''
    let $LANG .= '.UTF-8'
  endif

  unlet s:locale
endif

" set fileencodings=ucs-bom,utf-8,utf-16le,utf-16,default,latin1
if $LANG == 'ja_JP.UTF-8'
  set ambiwidth=double
  set fileencodings=ucs-bom,utf-8,sjis,default,latin1
  if has('iconv') && iconv("\xe5\xa4\x89\xe6\x8f\x9b", 'utf-8', 'cp932') !=# "\xe5\xa4\x89\xe6\x8f\x9b"
    " set fileencodings=ucs-bom,utf-8,iso-2022-jp,euc-jp,cp932,utf-16le,utf-16,default,latin1
    set fileencodings=ucs-bom,utf-8,iso-2022-jp,euc-jp,cp932,default,latin1
  endif
endif

" Directory
let s:dir = $APPBASE.'/cache/vim'
if exists("$APPBASE")
  if !isdirectory(s:dir)
    call mkdir(s:dir, 'p', 0775)
  endif
  au VimEnter * call <SID>VimEnter()
endif

fun s:VimEnter()
  if &directory != ""
    let &directory = &directory.",".s:dir
  endif
  if &backupdir != ""
    let &backupdir = &backupdir.",".s:dir
  endif
endfun

if !isdirectory($HOME) && isdirectory($APPFILES)
  let $HOME=$APPFILES/home
  mkdir -p $HOME
  silent! exe "chdir ".$HOME
endif

" Colorscheme
if &t_Co > 2 || has('gui_running')
  if $COLORFGBG == "'0;15'"
    set background=light
  elseif $COLORFGBG == "'15;0'"
    set background=dark
  endif
endif

" Plugin
let g:netrw_suppress_gx_mesg = 0
let g:netrw_browsex_viewer = "open"
let g:openuri_cmd = "netrw"
let g:loaded_zipPlugin = 1
let g:loaded_zip = 1
command! Vimtutor runtime tutor/tutor.vim | setlocal nowrap | setlocal nonumber

" Shell
if executable("bash")
  set shell=bash
endif
let &t_SI .= "\e[5 q"
let &t_SR .= "\e[3 q"
let &t_EI .= "\e[1 q"

" keymap
if !has("gui_running")
  au VimEnter unmap <ESC>
  au VimEnter iunmap <ESC>
endif

" Mouse
if has('mouse')
  if &term =~ 'xterm'
    set mouse=a
  else
    set mouse=nvi
  endif
endif

" Hotfix
packadd hotfix

let g:ATEMOD=1

" root
if $USER_ID == "0"
  finish
endif

" The other default settings are set in ATE-termvim-defaults.vim if user vimrc
" is not exist.

